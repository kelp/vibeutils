System Information
==================
Zig version: 0.14.1
Target: x86_64-linux
Build mode: ReleaseFast
Timestamp: 1753637643

Argument Parser Performance Benchmark
=====================================
Custom parser implementation vs zig-clap
Iterations per test: 10000

Testing custom parser only (zig-clap comparison requires code duplication)

Test: Simple flags
Args: -h -v -d
  Time: 1.70 ms total, 169 ns/iter
  Per iteration: 0.17 μs

Test: Combined flags
Args: -hvdfa
  Time: 0.41 ms total, 41 ns/iter
  Per iteration: 0.04 μs

Test: Long flags
Args: --help --verbose --debug --force --all
  Time: 8.93 ms total, 893 ns/iter
  Per iteration: 0.89 μs

Test: Mixed with values
Args: -v --count=42 -o output.txt --level 5 -m fast
  Time: 15.96 ms total, 1596 ns/iter
  Per iteration: 1.60 μs

Test: Complex with positionals
Args: -vdf --count=100 -o out.txt -- file1.txt file2.txt file3.txt
  Time: 886.06 ms total, 88605 ns/iter
  Per iteration: 88.61 μs

Test: Many flags
Args: -h -v -q -d -f -r -a -I --count=10 --level=20 --output=test.txt --input=in.txt --format=json --mode=auto pos1 pos2
  Time: 977.51 ms total, 97751 ns/iter
  Per iteration: 97.75 μs

Memory Usage Comparison
======================
Custom parser allocations per parse:
  - 1 allocation for positional arguments array
  - 0 allocations for flag parsing
  - Total: 1 allocation only when positionals are present

Binary Size Comparison
======================
To compare binary sizes:
1. Build echo with clap: zig build
2. Note the binary size: ls -lh zig-out/bin/echo
3. Remove clap dependency and rebuild
4. Compare the new binary size

Implementation size:
  - Custom parser: ~579 lines (excluding tests)
  - zig-clap: ~3,000 lines
