name: Documentation

on:
  push:
    branches: [main]
    paths: ['docs/**', 'man/**', 'README.md', 'src/**/*.zig']
  pull_request:
    branches: [main]
    paths: ['docs/**', 'man/**', 'README.md']
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force complete documentation rebuild'
        required: false
        default: false
        type: boolean

env:
  ZIG_VERSION: "0.14.1"
  FORCE_COLOR: 1

jobs:
  # Discover utilities for parallel processing
  discover:
    name: Discover Utilities
    runs-on: ubuntu-latest
    outputs:
      utilities: ${{ steps.discover.outputs.utilities }}
      count: ${{ steps.discover.outputs.count }}
      utilities-list: ${{ steps.discover.outputs.utilities-list }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/discover-utilities

  # Validate documentation in parallel
  validate:
    name: Validate Documentation
    runs-on: ubuntu-latest
    needs: [discover]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/validate-docs
      with:
        utilities: ${{ needs.discover.outputs.utilities-list }}
        zig-version: ${{ env.ZIG_VERSION }}

  # Generate documentation
  generate:
    name: Generate Documentation  
    runs-on: ubuntu-latest
    needs: [discover, validate]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/generate-docs
      with:
        utilities: ${{ needs.discover.outputs.utilities-list }}
        zig-version: ${{ env.ZIG_VERSION }}
        force-rebuild: ${{ github.event.inputs.force_rebuild }}

  # Check links in parallel with generation
  check-links:
    name: Check Links
    runs-on: ubuntu-latest
    needs: [generate]
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/check-links
      with:
        docs-artifact: documentation

  # Deploy to GitHub Pages (main branch only)
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [generate, check-links]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: documentation
        path: ./docs-site
    - run: touch docs-site/.nojekyll
    - uses: actions/configure-pages@v4
    - uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs-site
    - id: deployment
      uses: actions/deploy-pages@v4